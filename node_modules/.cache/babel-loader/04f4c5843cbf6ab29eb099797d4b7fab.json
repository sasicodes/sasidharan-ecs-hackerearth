{"ast":null,"code":"var _jsxFileName = \"/home/sasi/PERSONAL/pseudo-react-app/src/components/Play.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { URL_PATH } from \"../config/urlPath\";\nimport PlayCard from \"./PlayCard\";\nexport default function Play(props) {\n  const [users, setUsers] = useState(props.location.state.users || []);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [randomNumber, setRandomNumber] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const random = Math.floor(Math.random() * (9 - 1 + 1) + 1);\n    setRandomNumber(random);\n  }, []);\n  useEffect(() => {\n    let userList = users;\n    let tempArray = [];\n    userList.forEach(element => {\n      if (element.isSelected) {\n        tempArray.push(element);\n      }\n    });\n    setSelectedUsers(tempArray);\n  }, [users]);\n\n  const increaseWinToUser = id => {\n    let userList = users;\n    userList.forEach(element => {\n      if (element.id === id) {\n        element.wins = element.wins + 1;\n      } else {\n        element.loss = element.loss + 1;\n      }\n    });\n    setUsers(JSON.parse(JSON.stringify(userList)));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"play-area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, selectedUsers && selectedUsers.map((user, i) => {\n    return i < 5 && /*#__PURE__*/React.createElement(PlayCard, {\n      key: i,\n      user: user,\n      randomNumber: randomNumber,\n      increaseWinToUser: id => increaseWinToUser(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    });\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center my-30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, randomNumber)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex justify-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, selectedUsers && selectedUsers.map((user, i) => {\n    return i > 4 && /*#__PURE__*/React.createElement(PlayCard, {\n      key: i,\n      user: user,\n      randomNumber: randomNumber,\n      increaseWinToUser: id => increaseWinToUser(id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"back-btn\",\n    onClick: () => {\n      history.push({\n        pathname: URL_PATH.USER_LIST,\n        state: {\n          users: users\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"BACK\"));\n}","map":{"version":3,"sources":["/home/sasi/PERSONAL/pseudo-react-app/src/components/Play.js"],"names":["React","useState","useEffect","useHistory","URL_PATH","PlayCard","Play","props","users","setUsers","location","state","selectedUsers","setSelectedUsers","randomNumber","setRandomNumber","history","random","Math","floor","userList","tempArray","forEach","element","isSelected","push","increaseWinToUser","id","wins","loss","JSON","parse","stringify","map","user","i","pathname","USER_LIST"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { URL_PATH } from \"../config/urlPath\";\nimport PlayCard from \"./PlayCard\";\n\nexport default function Play(props) {\n  const [users, setUsers] = useState(props.location.state.users || []);\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [randomNumber, setRandomNumber] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    const random = Math.floor(Math.random() * (9 - 1 + 1) + 1);\n    setRandomNumber(random)\n  }, []);\n\n  useEffect(() => {\n    let userList = users;\n    let tempArray = [];\n    userList.forEach((element) => {\n      if (element.isSelected) {\n        tempArray.push(element);\n      }\n    });\n    setSelectedUsers(tempArray);\n  }, [users]);\n\n  const increaseWinToUser = (id) => {\n    let userList = users;\n    userList.forEach((element) => {\n      if (element.id === id) {\n        element.wins = element.wins + 1;\n      } else {\n        element.loss = element.loss + 1;\n      }\n    });\n    setUsers(JSON.parse(JSON.stringify(userList)));\n  };\n\n  return (\n    <div className=\"play-area\">\n      <div className=\"my-auto\">\n        <div className=\"flex justify-center\">\n          {selectedUsers &&\n            selectedUsers.map((user, i) => {\n              return (\n                i < 5 && (\n                  <PlayCard\n                    key={i}\n                    user={user}\n                    randomNumber={randomNumber}\n                    increaseWinToUser={(id) => increaseWinToUser(id)}\n                  />\n                )\n              );\n            })}\n        </div>\n        <div>\n          <div className=\"flex justify-center my-30\">\n            <div className=\"circle\">\n              <p>{randomNumber}</p>\n            </div>\n          </div>\n        </div>\n        <div className=\"flex justify-center\">\n          {selectedUsers &&\n            selectedUsers.map((user, i) => {\n              return (\n                i > 4 && (\n                  <PlayCard\n                    key={i}\n                    user={user}\n                    randomNumber={randomNumber}\n                    increaseWinToUser={(id) => increaseWinToUser(id)}\n                  />\n                )\n              );\n            })}\n        </div>\n      </div>\n      <button\n        className=\"back-btn\"\n        onClick={() => {\n          history.push({\n            pathname: URL_PATH.USER_LIST,\n            state: { users: users },\n          });\n        }}\n      >\n        BACK\n      </button>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}